# Temporary Drive Plotter Phase Settings

# Because Chia Phase 1 utilizes more memory and cpu (thread) resources
# AND is the only multi-threaded stage (after phase 1, the jobs are single threaded)
# These phase settings can help fine tune your chia plotting process
# beyond setting a stagger or limit on number of concurrent jobs

# There are 3 parameters that will help you achieve this. But before learning those,
# take a look at the table below, to learn all the phases and steps of the chia plotting process

# Chia Phase:Step Table

# Phase	Step	% Progress
# 1	1	1%
# 1	2	6%
# 1	3	12%
# 1	4	20%
# 1	5	28%
# 1	6	36%
# 1	7	42%

# 2	1	43%
# 2	2	48%
# 2	3	51%
# 2	4	55%
# 2	5	58%
# 2	6	61%

# 3	1	66%
# 3	2	73%
# 3	3	79%
# 3	4	85%
# 3	5	92%
# 3	6	98%

# 4	1	100%

# Example 1 - Detailed Explanation

# The tmpdir_stagger_phase_major and tmpdir_stagger_phase_minor correspond
# to the phase and step the plotting process is currently in
# For e.g. it could be 2:1 (2 is the phase or major, 1 is the step or minor)
#tmpdir_stagger_phase_major = 2		# phase 2
#tmpdir_stagger_phase_minor = 1		# step 1

# The tmpdir_stagger_phase_limit corresponds to the number of plot jobs that can be
# concurrently run before reaching phase 2, step 1 or 2:1
# If this is set to 2, then there will always be 2 plot jobs
# concurrently ran during phase 1. Or specifically during (1:1, 1:2, 1:3, 1:4, 1:5, 1:6, 1:7)
#tmpdir_stagger_phase_limit = 2		# limit of 2 plot jobs

# Example 2
# You may decide you want to allow 3 conconcurrent plot jobs to run during phase 1
# Increase the tmpdir_stagger_phase_limit to 3
# tmpdir_stagger_phase_major = 2	# phase 2
# tmpdir_stagger_phase_minor = 1	# step 1
# tmpdir_stagger_phase_limit = 3	# limit of 3 plot jobs

# Example 3
# You may decide you want to relax the restriction and expand the phase:step to 3:1
# And Increase the limit on jobs to 4
# tmpdir_stagger_phase_major = 3	# phase 3
# tmpdir_stagger_phase_minor = 1	# step 1
# tmpdir_stagger_phase_limit = 4	# limit of 4 plot jobs

# Options for display and rendering
user_interface:
        # Call out to the `stty` program to determine terminal size, instead of
        # relying on what is reported by the curses library.   In some cases,
        # the curses library fails to update on SIGWINCH signals.  If the
        # `plotman interactive` curses interface does not properly adjust when
        # you resize the terminal window, you can try setting this to True. 
        use_stty_size: True

# Where to plot and log.
directories:
        # One directory in which to store all plot job logs (the STDOUT/
        # STDERR of all plot jobs).  In order to monitor progress, plotman
        # reads these logs on a regular basis, so using a fast drive is
        # recommended.
        log: /home/tac/.plotman/logs

        # One or more directories to use as tmp dirs for plotting.  The
        # scheduler will use all of them and distribute jobs among them.
        # It assumes that IO is independent for each one (i.e., that each
        # one is on a different physical device).
        #
        # If multiple directories share a common prefix, reports will
        # abbreviate and show just the uniquely identifying suffix.
        tmp:
                - /mnt/plotter1/plots
                - /mnt/plotter2/plots
                - /mnt/plotter3/plots
                #- /mnt/plotter4/plots
                #- /home/tac/plots

        # Optional: Allows overriding some characteristics of certain tmp
        # directories. This contains a map of tmp directory names to
        # attributes. If a tmp directory and attribute is not listed here,
        # it uses the default attribute setting from the main configuration.
        #
        # Currently support override parameters:
        #     - tmpdir_max_jobs
        #tmp_overrides:
                # In this example, /mnt/tmp/00 is larger than the other tmp
                # dirs and it can hold more plots than the default.
                #        "/mnt/plotter2/chia":
                #        tmpdir_max_jobs: 1

        # Optional: tmp2 directory.  If specified, will be passed to
        # chia plots create as -2.  Only one tmp2 directory is supported.
        # tmp2: /mnt/tmp/a

        # One or more directories; the scheduler will use all of them.
        # These again are presumed to be on independent physical devices,
        # so writes (plot jobs) and reads (archivals) can be scheduled
        # to minimize IO contention.
        #dst:
                #- /mnt/plotter1
                #- /mnt/plotter2
                #- /mnt/plotter3

        # Archival configuration.  Optional; if you do not wish to run the
        # archiving operation, comment this section out.
        #
        # Currently archival depends on an rsync daemon running on the remote
        # host, and that the module is configured to match the local path.
        # See code for details.
        archive:
                rsyncd_module: chia
                rsyncd_path: /mnt/farmers
                rsyncd_bwlimit: 100000  # Bandwidth limit in KB/s
                rsyncd_host: localhost
                rsyncd_user: tac
                # Optional index.  If omitted or set to 0, plotman will archive
                # to the first archive dir with free space.  If specified,
                # plotman will skip forward up to 'index' drives (if they exist).
                # This can be useful to reduce io contention on a drive on the
                # archive host if you have multiple plotters (simultaneous io
                # can still happen at the time a drive fills up.)  E.g., if you
                # have four plotters, you could set this to 0, 1, 2, and 3, on
                # the 4 machines, or 0, 1, 0, 1.
                #   index: 0


# Plotting scheduling parameters
scheduling:
        # Run a job on a particular temp dir only if the number of existing jobs
        # before tmpdir_stagger_phase_major tmpdir_stagger_phase_minor
        # is less than tmpdir_stagger_phase_limit.
        # Phase major corresponds to the plot phase, phase minor corresponds to
        # the table or table pair in sequence, phase limit corresponds to
        # the number of plots allowed before [phase major, phase minor]
        tmpdir_stagger_phase_major: 1
        tmpdir_stagger_phase_minor: 4
        # Optional: default is 1
        tmpdir_stagger_phase_limit: 2

        # Don't run more than this many jobs at a time on a single temp dir.
        tmpdir_max_jobs: 6

        # Don't run more than this many jobs at a time in total.
        global_max_jobs: 14

        # Don't run any jobs (across all temp dirs) more often than this, in minutes.
        global_stagger_m: 45

        # How often the daemon wakes to consider starting a new plot job, in seconds.
        polling_time_s: 40


# Plotting parameters.  These are pass-through parameters to chia plots create.
# See documentation at
# https://github.com/Chia-Network/chia-blockchain/wiki/CLI-Commands-Reference#create
plotting:
        k: 32
        e: False             # Use -e plotting option
        n_threads: 2         # Threads per job
        n_buckets: 128       # Number of buckets to split data into
        job_buffer: 4608     # Per job memory
        # If specified, pass through to the -f and -p options.  See CLI reference.
        #   farmer_pk: ...
        #   pool_pk: ...
